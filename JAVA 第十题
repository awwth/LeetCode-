将两个有序链表合并为一个新的有序链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 

示例：

输入：1->2->4, 1->3->4
输出：1->1->2->3->4->4

每次将队列中的两个排头挑出来排序，依次连接。最终排成一条队列
本题分别用递归和迭代编写。
配合另一个文档的迭代和递归的区别理解最佳。


方法一：迭代
class Solution{
  public ListNode mergeTwoLists(ListNode l1,ListNode l2){
  ListNode dummy= new ListNode(0);
  ListNode p= dummy;
  while(l1!=null &&l2!=null){
  if(l1.val<l2.val){
  p.next=l1;
  l1=l1.next;
    }
    else{
    p.next=l2;
    l2=l2.next;
    }
    p=p.next;
  }
  if(l1==null) p.next=l2;
  if(l2==null) p.next=l1;
  return dummy.next;
  }
}

方法二：递归

class Solution{
  public ListNode mergeTwoList(ListNode l1,ListNode l2)
  {
    if(l1==null) return l2;
    if(l2==null) return l1;
    if(l1.val<l2.val){
    l1.next=mergeTwoList(l1.next,l2);
    return l1;
    }
    else{
    l2.next=mergeTwoList(l1,l2.next);
    return l2;
    }
  }
}
